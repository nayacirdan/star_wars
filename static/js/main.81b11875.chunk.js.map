{"version":3,"sources":["components/Logo.js","actions/actionsConstants.js","utils/utils.js","actions/actionsCreators.js","components/Header.js","components/LinksList.js","pages/HomePage.js","pages/FilmPage.js","pages/StarshipPage.js","pages/PlanetPage.js","routes/AppRoutes.js","App.js","serviceWorker.js","reducers/allFilmsReducer.js","reducers/currentItemReducer.js","reducers/infoListsReducer.js","reducers/searchedFilmsReducer.js","reducers/rootReducer.js","store/store.js","index.js"],"names":["Logo","size","onClick","fillColorMain","fillColorCircle","version","id","xmlns","x","y","viewBox","width","height","xml","cx","cy","r","fill","d","Actions","GET_ALL_FILMS","SET_CURRENT_ITEM","GET_ITEM_INFO_BY_LINK","SET_CURRENT_ITEM_FORCED","GET_SEARCHED_FILMS","SET_SEARCHED_FILMS_TO_NULL","makeIdFromUrl","url","urlArr","split","length","setCurrentItem","item","dispatch","type","payload","useStyles","makeStyles","theme","root","header","padding","Header","classes","useDispatch","history","useHistory","className","Grid","container","direction","alignItems","Tooltip","title","aria-label","Button","push","Typography","variant","Link","href","maxWidth","backgroundColor","palette","darkBg","main","marginTop","marginBottom","display","flexDirection","listItem","link","color","primary","textDecoration","yellow","LinksList","arr","listName","location","useLocation","linksArr","currentItem","useSelector","state","currentItemIsFull","Object","entries","useEffect","locationPath","pathname","includes","substr","apiUrl","axios","get","then","response","data","listArrOFLinks","promises","map","str","el","res","itemInfoArr","Promise","all","storeName","getItemInfoByLink","itemsInfo","infoLists","film","ListItem","key","button","to","name","List","CircularProgress","searchForm","searchInput","HomePage","handleChange","ev","searchValue","target","value","allFilms","searchedFilms","results","Container","justify","noValidate","autoComplete","TextField","label","onChange","column","FilmPage","currentFilm","StarshipPage","currentStarship","PlanetPage","currentPlanet","AppRoutes","exact","path","component","outerTheme","createMuiTheme","dark","grey","typography","h1","fontSize","fontWeight","textShadow","h2","body1","App","ThemeProvider","Boolean","window","hostname","match","initialState","action","films","planets","starships","rootReducer","combineReducers","reduxDevTools","__REDUX_DEVTOOLS_EXTENSION__","f","store","createStore","compose","applyMiddleware","thunk","ReactDOM","render","StrictMode","basename","process","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.81b11875.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Logo = ({size, onClick, fillColorMain, fillColorCircle}) => {\r\n    return (\r\n        <div onClick={onClick}>\r\n            <svg version=\"1.1\"\r\n                 id=\"Capa_1\"\r\n                 xmlns=\"http://www.w3.org/2000/svg\"\r\n\r\n                 x=\"0px\" y=\"0px\"\r\n                 viewBox=\"0 0 512 512\"\r\n                 width={size}\r\n                 height={size}\r\n                 xml=\"preserve\">\r\n                <g>\r\n                    <g>\r\n                        <g>\r\n                            <circle cx=\"224\" cy=\"138.667\" r=\"32\" fill={fillColorCircle}/>\r\n                            <path fill={fillColorMain} d=\"M437.333,245.333c5.896,0,10.667-4.771,10.667-10.667V192h32c5.896,0,10.667-4.771,10.667-10.667v-42.667\r\n\t\t\t\tc0-5.896-4.771-10.667-10.667-10.667h-53.333V85.333h15.5c4.406,0,8.354-2.708,9.948-6.823c1.594-4.104,0.49-8.771-2.771-11.729\r\n\t\t\t\tC402,23.719,340.917,0,277.333,0c-141.156,0-256,114.844-256,256s114.844,256,256,256c63.583,0,124.667-23.719,172.01-66.781\r\n\t\t\t\tc3.26-2.958,4.365-7.625,2.771-11.729c-1.594-4.115-5.542-6.823-9.948-6.823h-15.5v-21.333H480\r\n\t\t\t\tc5.896,0,10.667-4.771,10.667-10.667v-64c0-5.896-4.771-10.667-10.667-10.667h-74.667v-53.333H43.207\r\n\t\t\t\tc-0.161-3.561-0.54-7.066-0.54-10.667s0.379-7.105,0.54-10.667H437.333z M341.333,128H384c5.896,0,10.667,4.771,10.667,10.667\r\n\t\t\t\tc0,5.896-4.771,10.667-10.667,10.667h-42.667c-5.896,0-10.667-4.771-10.667-10.667C330.667,132.771,335.438,128,341.333,128z\r\n\t\t\t\t M224,64c41.167,0,74.667,33.5,74.667,74.667c0,41.167-33.5,74.667-74.667,74.667s-74.667-33.5-74.667-74.667\r\n\t\t\t\tC149.333,97.5,182.833,64,224,64z M96,128h21.333c5.896,0,10.667,4.771,10.667,10.667c0,5.896-4.771,10.667-10.667,10.667H96\r\n\t\t\t\tc-5.896,0-10.667-4.771-10.667-10.667C85.333,132.771,90.104,128,96,128z M330.667,320h32c5.896,0,10.667,4.771,10.667,10.667\r\n\t\t\t\tc0,5.896-4.771,10.667-10.667,10.667h-32c-5.896,0-10.667-4.771-10.667-10.667C320,324.771,324.771,320,330.667,320z\r\n\t\t\t\t M138.667,384H96c-5.896,0-10.667-4.771-10.667-10.667c0-5.896,4.771-10.667,10.667-10.667h42.667\r\n\t\t\t\tc5.896,0,10.667,4.771,10.667,10.667C149.333,379.229,144.563,384,138.667,384z M85.333,298.667h96\r\n\t\t\t\tc5.896,0,10.667,4.771,10.667,10.667c0,5.896-4.771,10.667-10.667,10.667h-96c-5.896,0-10.667-4.771-10.667-10.667\r\n\t\t\t\tC74.667,303.438,79.438,298.667,85.333,298.667z\"/>\r\n                        </g>\r\n                    </g>\r\n                </g>\r\n                <g>\r\n                </g>\r\n                <g>\r\n                </g>\r\n                <g>\r\n                </g>\r\n                <g>\r\n                </g>\r\n                <g>\r\n                </g>\r\n                <g>\r\n                </g>\r\n                <g>\r\n                </g>\r\n                <g>\r\n                </g>\r\n                <g>\r\n                </g>\r\n                <g>\r\n                </g>\r\n                <g>\r\n                </g>\r\n                <g>\r\n                </g>\r\n                <g>\r\n                </g>\r\n                <g>\r\n                </g>\r\n                <g>\r\n                </g>\r\n            </svg>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Logo;\r\n","const Actions={\r\n    GET_ALL_FILMS:'GET_ALL_FILMS',\r\n    SET_CURRENT_ITEM:'SET_CURRENT_ITEM',\r\n    GET_ITEM_INFO_BY_LINK:'GET_ITEM_INFO_BY_LINK',\r\n    SET_CURRENT_ITEM_FORCED:'SET_CURRENT_ITEM_FORCED',\r\n    GET_SEARCHED_FILMS:'GET_SEARCHED_FILMS',\r\n    SET_SEARCHED_FILMS_TO_NULL:'SET_SEARCHED_FILMS_TO_NULL'\r\n}\r\nexport default Actions","export const makeIdFromUrl = (url) => {\r\n    const urlArr = url.split('/');\r\n    return urlArr[urlArr.length - 2];\r\n}\r\n\r\nexport const changeUrls=(arr)=>{\r\n    return arr.map(str=>{\r\n        return str.substr(0,4)+'s'+str.substr(4);\r\n    });\r\n}","import Actions from \"./actionsConstants\";\r\nimport axios from \"axios\";\r\nimport {changeUrls} from '../utils/utils'\r\n\r\nexport const getAllFilms=()=>(dispatch)=>{\r\n    axios.get('https://swapi.dev/api/films/')\r\n        .then((response)=>{\r\n            dispatch({type:Actions.GET_ALL_FILMS, payload:response.data})\r\n        });\r\n}\r\n\r\nexport const setCurrentItem=(item)=>(dispatch)=>{\r\n    dispatch({type:Actions.SET_CURRENT_ITEM, payload: item})\r\n}\r\n\r\nexport const setCurrentItemForced=(locationPath)=>(dispatch)=>{\r\n    if (locationPath.includes('/star_wars')){\r\n        locationPath=locationPath.substr(10);\r\n    }\r\n\r\n    const apiUrl=`https://swapi.dev/api${locationPath}/`;\r\n    axios.get(apiUrl)\r\n        .then((response)=>{\r\n            dispatch({type:Actions.SET_CURRENT_ITEM_FORCED, payload:response.data})\r\n        });\r\n}\r\n\r\nexport const getItemInfoByLink=(linksArr, listName)=>(dispatch)=>{\r\n    let newLinksArr=changeUrls(linksArr);\r\n    const promises=newLinksArr.map(el=>{\r\n       return axios.get(el)\r\n            .then(res=>res.data);\r\n    });\r\n    let itemInfoArr=[]\r\n    Promise.all(promises).then(res=> {\r\n        itemInfoArr=res.map(el=>el);\r\n        dispatch({type:Actions.GET_ITEM_INFO_BY_LINK, payload:itemInfoArr, storeName:listName})\r\n    });\r\n}\r\n\r\nexport const getSearchedFilms=(searchValue)=>(dispatch)=>{\r\n    const apiUrl=`https://swapi.dev/api/films/?search=${searchValue}`;\r\n    axios.get(apiUrl)\r\n        .then((response)=>{\r\n            dispatch({type:Actions.GET_SEARCHED_FILMS, payload:response.data})\r\n        });\r\n}\r\n\r\nexport const setSearchedFilmsToNull=()=>(dispatch)=>{\r\n    dispatch({type:Actions.SET_SEARCHED_FILMS_TO_NULL});\r\n}","import React from 'react';\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Logo from \"./Logo\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Link from \"@material-ui/core/Link\";\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport {setSearchedFilmsToNull} from \"../actions/actionsCreators\";\r\nimport {useDispatch} from \"react-redux\";\r\nimport {useHistory} from 'react-router'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {},\r\n    header: {\r\n        padding: 20\r\n    }\r\n}));\r\n\r\nconst Header = () => {\r\n    const classes = useStyles();\r\n    const dispatch = useDispatch();\r\n    const history = useHistory();\r\n\r\n    const returnToHomePage = () => {\r\n        dispatch(setSearchedFilmsToNull())\r\n        history.push('/')\r\n    }\r\n\r\n    return (\r\n        <header className={classes.header}>\r\n            <Grid container direction='row' alignItems='center'>\r\n                <Tooltip title=\"Home\" aria-label=\"Home\">\r\n                    <Button>\r\n                        <Logo onClick={returnToHomePage} size='50' fillColorMain='#CCC'\r\n                              fillColorCircle='#ccc'/>\r\n                    </Button>\r\n                </Tooltip>\r\n                <Typography variant=\"body1\">Star Wars APP, using <Link\r\n                    href='https://swapi.dev/'>SWAPI</Link></Typography>\r\n            </Grid>\r\n\r\n        </header>\r\n    );\r\n};\r\n\r\nexport default Header;\r\n","import React, {useEffect} from 'react';\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport {Link} from \"react-router-dom\";\r\nimport {makeIdFromUrl} from \"../utils/utils\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {\r\n    getItemInfoByLink,\r\n    setCurrentItem,\r\n    setCurrentItemForced\r\n} from \"../actions/actionsCreators\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport {useLocation} from 'react-router'\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport yellow from '@material-ui/core/colors/yellow'\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        width: '100%',\r\n        maxWidth: 360,\r\n        backgroundColor: theme.palette.darkBg.main,\r\n        marginTop: 20,\r\n        marginBottom: 20,\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center'\r\n    },\r\n    listItem: {\r\n        backgroundColor: theme.palette.darkBg.main\r\n    },\r\n    link: {\r\n        color: theme.palette.primary.main,\r\n        textDecoration: \"none\",\r\n        '&:visited': {\r\n            color: yellow['700']\r\n        }\r\n    }\r\n}));\r\n\r\nconst LinksList = ({arr, listName}) => {\r\n    const classes = useStyles();\r\n    const dispatch = useDispatch()\r\n    const location = useLocation();\r\n\r\n    let linksArr = [];\r\n    const currentItem = useSelector(state => state.currentItem);\r\n    const currentItemIsFull = Object.entries(currentItem).length;\r\n\r\n    useEffect(() => {\r\n        if (!currentItemIsFull) {\r\n            dispatch(setCurrentItemForced(location.pathname));\r\n        }\r\n    }, [dispatch, currentItemIsFull, listName, location.pathname])\r\n\r\n    const listArrOFLinks = useSelector(state => state.currentItem[listName]);\r\n\r\n    useEffect(() => {\r\n        if (listArrOFLinks) {\r\n            dispatch(getItemInfoByLink(listArrOFLinks, listName))\r\n        }\r\n    }, [listArrOFLinks, dispatch, listName])\r\n\r\n    const itemsInfo = useSelector(state => state.infoLists[listName]);\r\n\r\n    if (listName === 'allFilms') {\r\n        const filmsSimpleArr = arr.map(el => {\r\n            return {\r\n                ...el,\r\n                id: makeIdFromUrl(el.url),\r\n            }\r\n        });\r\n\r\n        linksArr = filmsSimpleArr.map(film => {\r\n            return (\r\n                <ListItem key={`film-${film.id}`} button className={classes.listItem}>\r\n                    <Link to={`/films/${film.id}`}\r\n                          onClick={() => dispatch(setCurrentItem(film))}\r\n                          className={classes.link}>\r\n                        {film.title}\r\n                    </Link>\r\n                </ListItem>\r\n            )\r\n        })\r\n    }\r\n    else\r\n        {\r\n        if (itemsInfo) {\r\n            linksArr = itemsInfo.map(item => {\r\n                item.id = makeIdFromUrl(item.url)\r\n                return (\r\n                    <ListItem key={`${listName}-${item.id}`} button className={classes.listItem}>\r\n                        <Link to={`/${listName}/${item.id}`}\r\n                              onClick={() => dispatch(setCurrentItem(item))}\r\n                              className={classes.link}>\r\n\r\n                            {item.name ? item.name : item.title}\r\n                        </Link>\r\n                    </ListItem>\r\n                )\r\n            })\r\n        }\r\n\r\n    }\r\n\r\n\r\n    return (\r\n        <List className={classes.root}>\r\n            {linksArr.length ? linksArr : <CircularProgress/>}\r\n        </List>\r\n    );\r\n};\r\n\r\nexport default LinksList;\r\n","import React, {useEffect} from 'react';\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport LinksList from \"../components/LinksList\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {getAllFilms, getSearchedFilms} from \"../actions/actionsCreators\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport {makeStyles} from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {},\r\n    container: {\r\n        padding: 20,\r\n        backgroundColor: 'rgba(155,155,155,0.13)',\r\n        marginBottom: 100\r\n    },\r\n    searchForm: {\r\n        '& > *': {\r\n            width: '45ch',\r\n        },\r\n    },\r\n    searchInput: {}\r\n}));\r\n\r\nconst HomePage = () => {\r\n    const dispatch = useDispatch();\r\n    const classes = useStyles();\r\n\r\n\r\n    const handleChange = (ev) => {\r\n        dispatch(getSearchedFilms(ev.target.value))\r\n    }\r\n    useEffect(() => {\r\n        dispatch(getAllFilms())\r\n    }, [dispatch])\r\n\r\n    const allFilms = useSelector(state => state.allFilms);\r\n    const searchedFilms = useSelector(state => state.searchedFilms.results);\r\n\r\n    return (\r\n        <Container>\r\n            <Grid container direction='column' justify='center' alignItems='center' className={classes.container}>\r\n                <form noValidate autoComplete=\"off\" className={classes.searchForm}>\r\n                    <TextField id=\"search-field\"\r\n                               label=\"Type film name...\"\r\n                               onChange={(ev) => handleChange(ev)}\r\n                               className={classes.searchInput}\r\n                    />\r\n                </form>\r\n\r\n                {searchedFilms ? <LinksList arr={searchedFilms} listName='allFilms'/> : (\r\n                    allFilms ? <LinksList arr={allFilms} listName='allFilms'/> : <CircularProgress/>)}\r\n            </Grid>\r\n\r\n        </Container>\r\n    );\r\n};\r\n\r\nexport default HomePage;\r\n","import React from 'react';\r\nimport {useSelector} from \"react-redux\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport LinksList from \"../components/LinksList\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {},\r\n    container: {\r\n        padding: 20,\r\n        backgroundColor: 'rgba(155,155,155,0.13)',\r\n        marginBottom: 100\r\n    },\r\n    column: {\r\n        width: '30%'\r\n    }\r\n}));\r\n\r\nconst FilmPage = () => {\r\n    const classes = useStyles();\r\n    const currentFilm = useSelector(state => state.currentItem.title)\r\n    return (\r\n        <Container>\r\n            <Typography variant=\"h1\">Film: {currentFilm}</Typography>\r\n            <Grid container direction='row' justify='space-around' className={classes.container}>\r\n                <Grid item className={classes.column}>\r\n                    <Typography variant=\"h2\">Planets:</Typography>\r\n                    <LinksList listName='planets'/>\r\n                </Grid>\r\n                <Grid item className={classes.column}>\r\n                    <Typography variant=\"h2\">Starships:</Typography>\r\n                    <LinksList listName='starships'/>\r\n                </Grid>\r\n            </Grid>\r\n        </Container>\r\n    );\r\n};\r\n\r\nexport default FilmPage;\r\n","import React from 'react';\r\nimport {useSelector} from \"react-redux\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport LinksList from \"../components/LinksList\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {},\r\n    container: {\r\n        padding: 20,\r\n        backgroundColor: 'rgba(155,155,155,0.13)',\r\n        marginBottom: 100\r\n    },\r\n}));\r\n\r\nconst StarshipPage = () => {\r\n    const classes = useStyles();\r\n    const currentStarship = useSelector(state => state.currentItem.name);\r\n\r\n    return (\r\n        <Container>\r\n            <Grid container direction='column' justify='center' alignItems='center' className={classes.container}>\r\n\r\n                <Typography variant=\"h1\">Starship: {currentStarship}</Typography>\r\n                <Typography variant=\"h2\">Films:</Typography>\r\n                <LinksList listName='films'/>\r\n            </Grid>\r\n        </Container>\r\n    );\r\n};\r\n\r\nexport default StarshipPage;\r\n","import React from 'react';\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport LinksList from \"../components/LinksList\";\r\nimport {useSelector} from \"react-redux\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {},\r\n    container: {\r\n        padding: 20,\r\n        backgroundColor: 'rgba(155,155,155,0.13)',\r\n        marginBottom: 100\r\n    },\r\n}));\r\n\r\nconst PlanetPage = () => {\r\n    const classes = useStyles();\r\n    const currentPlanet = useSelector(state => state.currentItem.name);\r\n    return (\r\n        <Container>\r\n            <Grid container direction='column' justify='center' alignItems='center' className={classes.container}>\r\n                <Typography variant=\"h1\">Planet: {currentPlanet}</Typography>\r\n                <Typography variant=\"h2\">Films:</Typography>\r\n                <LinksList listName='films'/>\r\n            </Grid>\r\n        </Container>\r\n    );\r\n};\r\n\r\nexport default PlanetPage;\r\n","import React from 'react';\r\nimport {Route, Switch} from \"react-router-dom\";\r\nimport HomePage from \"../pages/HomePage\";\r\nimport FilmPage from \"../pages/FilmPage\";\r\nimport StarshipPage from \"../pages/StarshipPage\";\r\nimport PlanetPage from \"../pages/PlanetPage\";\r\n\r\nconst AppRoutes = () => {\r\n    return (\r\n        <Switch>\r\n            <Route exact path='/' component={HomePage}/>\r\n            <Route exact path='/films/:id' component={FilmPage}/>\r\n            <Route exact path='/starships/:id' component={StarshipPage}/>\r\n            <Route exact path='/planets/:id' component={PlanetPage}/>\r\n        </Switch>\r\n    );\r\n};\r\n\r\nexport default AppRoutes;\r\n","import React from 'react';\nimport yellow from '@material-ui/core/colors/yellow'\nimport grey from '@material-ui/core/colors/grey'\nimport Container from \"@material-ui/core/Container\";\nimport ThemeProvider from \"@material-ui/styles/ThemeProvider\";\nimport createMuiTheme from \"@material-ui/core/styles/createMuiTheme\";\nimport Header from \"./components/Header\";\nimport AppRoutes from \"./routes/AppRoutes\";\n\n\nconst outerTheme = createMuiTheme({\n    palette: {\n        primary: {\n            main: yellow['A200'],\n            dark: yellow['700']\n        },\n        darkBg: {\n            main: grey[900],\n        },\n    },\n    typography: {\n\n        h1: {\n            fontSize: '30',\n            fontWeight: 'bold',\n            color: '#fff',\n            marginBottom: 20,\n            marginTop: 20,\n            textShadow: '1px 1px 10px rgba(0, 0, 0, 1)'\n        },\n        h2: {\n            fontSize: '25',\n            color: '#fff',\n            fontWeight: 'bold',\n            textShadow: '1px 1px 10px rgba(0, 0, 0, 1)'\n        },\n        body1: {\n            color: '#fff',\n        }\n\n    },\n});\n\n\n\nfunction App() {\n\n    return (\n        <div className=\"App\">\n            <ThemeProvider theme={outerTheme}>\n                <Container maxWidth=\"xl\">\n                    <Header/>\n                    <AppRoutes/>\n                </Container>\n            </ThemeProvider>\n        </div>\n    );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import Actions from \"../actions/actionsConstants\";\r\n\r\nconst initialState=[]\r\n\r\nconst allFilms=(state=initialState, action)=>{\r\n    switch (action.type) {\r\n        case Actions.GET_ALL_FILMS:{\r\n            return action.payload.results\r\n        }\r\n\r\n        default: return state;\r\n    }\r\n}\r\n\r\nexport default allFilms;","import Actions from \"../actions/actionsConstants\";\r\n\r\nconst initialState={}\r\n\r\nconst currentItem=(state=initialState, action)=>{\r\n    switch (action.type) {\r\n        case Actions.SET_CURRENT_ITEM:{\r\n            return action.payload\r\n        }\r\n        case Actions.SET_CURRENT_ITEM_FORCED:{\r\n            return action.payload\r\n        }\r\n\r\n        default: return {...state}\r\n    }\r\n}\r\nexport default currentItem;","import Actions from \"../actions/actionsConstants\";\r\n\r\nconst initialState={\r\n    films:[],\r\n    planets:[],\r\n    starships:[]\r\n};\r\n\r\nconst infoLists=(state=initialState, action)=>{\r\n    switch (action.type) {\r\n        case Actions.GET_ITEM_INFO_BY_LINK:{\r\n            return {...state, [action.storeName]:action.payload}\r\n        }\r\n\r\n        default: return state\r\n    }\r\n}\r\n\r\nexport default infoLists;","import Actions from \"../actions/actionsConstants\";\r\n\r\nconst initialState=[];\r\n\r\nconst searchedFilms=(state=initialState, action)=>{\r\n    switch (action.type) {\r\n        case Actions.GET_SEARCHED_FILMS: {\r\n            return action.payload\r\n        }\r\n        case Actions.SET_SEARCHED_FILMS_TO_NULL:{\r\n            return []\r\n        }\r\n        \r\n        default: return state\r\n    }\r\n}\r\nexport default searchedFilms;","import {combineReducers} from \"redux\";\r\nimport allFilms from \"./allFilmsReducer\";\r\nimport currentItem from \"./currentItemReducer\";\r\nimport infoLists from \"./infoListsReducer\";\r\nimport searchedFilms from \"./searchedFilmsReducer\";\r\n\r\nconst rootReducer=combineReducers({\r\n        allFilms, currentItem, infoLists, searchedFilms\r\n}\r\n\r\n)\r\n\r\nexport default rootReducer;","import {applyMiddleware, compose, createStore} from \"redux\";\r\nimport rootReducer from \"../reducers/rootReducer\";\r\nimport thunk from \"redux-thunk\";\r\n\r\nconst reduxDevTools = window.__REDUX_DEVTOOLS_EXTENSION__ ? window.__REDUX_DEVTOOLS_EXTENSION__() : f => f;\r\n\r\nconst store = createStore(rootReducer, compose(applyMiddleware(thunk), reduxDevTools));\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {Provider} from \"react-redux\";\nimport {BrowserRouter} from \"react-router-dom\";\nimport store from './store/store'\nReactDOM.render(\n  <React.StrictMode>\n      <Provider store={store}>\n          <BrowserRouter basename={process.env.PUBLIC_URL}>\n              <App />\n          </BrowserRouter>\n      </Provider>\n\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}